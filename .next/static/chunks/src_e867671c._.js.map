{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useLocalData.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from 'react'\n\nexport interface Product {\n  id: string\n  name: string\n  price: number\n  quantity: number\n  description: string\n  farmId: string\n  farmName: string\n  category: string\n  seasonal: boolean\n  harvestDate?: string\n}\n\nexport interface Farm {\n  id: string\n  name: string\n  owner: string\n  location: string\n  email: string\n  phone: string\n  products: Product[]\n}\n\nexport interface Restaurant {\n  id: string\n  name: string\n  owner: string\n  location: string\n  email: string\n  phone: string\n}\n\nexport interface OrderItem {\n  productId: string\n  productName: string\n  quantity: number\n  price: number\n  farmId: string\n  farmName: string\n}\n\nexport interface Order {\n  id: string\n  restaurantId: string\n  restaurantName: string\n  items: OrderItem[]\n  status: 'pending' | 'confirmed' | 'delivered' | 'cancelled'\n  orderDate: string\n  deliveryDate?: string\n  total: number\n  commission: number\n}\n\nexport interface LocalData {\n  farms: Farm[]\n  restaurants: Restaurant[]\n  orders: Order[]\n  lastUpdated: string\n}\n\nconst defaultData: LocalData = {\n  farms: [\n    {\n      id: 'farm-1',\n      name: 'Green Valley Farm',\n      owner: 'John Smith',\n      location: 'Valley County',\n      email: 'john@greenvalley.com',\n      phone: '(555) 123-4567',\n      products: [\n        {\n          id: 'prod-1',\n          name: 'Organic Tomatoes',\n          price: 4.50,\n          quantity: 100,\n          description: 'Fresh organic tomatoes, locally grown',\n          farmId: 'farm-1',\n          farmName: 'Green Valley Farm',\n          category: 'Vegetables',\n          seasonal: true,\n          harvestDate: '2024-06-15'\n        },\n        {\n          id: 'prod-2',\n          name: 'Fresh Lettuce',\n          price: 2.25,\n          quantity: 75,\n          description: 'Crisp lettuce heads, perfect for salads',\n          farmId: 'farm-1',\n          farmName: 'Green Valley Farm',\n          category: 'Vegetables',\n          seasonal: false\n        }\n      ]\n    },\n    {\n      id: 'farm-2',\n      name: 'Sunrise Orchards',\n      owner: 'Maria Garcia',\n      location: 'Hill County',\n      email: 'maria@sunriseorchards.com',\n      phone: '(555) 987-6543',\n      products: [\n        {\n          id: 'prod-3',\n          name: 'Organic Apples',\n          price: 3.75,\n          quantity: 200,\n          description: 'Sweet and crisp organic apples',\n          farmId: 'farm-2',\n          farmName: 'Sunrise Orchards',\n          category: 'Fruits',\n          seasonal: true,\n          harvestDate: '2024-09-01'\n        }\n      ]\n    }\n  ],\n  restaurants: [\n    {\n      id: 'rest-1',\n      name: 'Farm Table Bistro',\n      owner: 'Chef David Wilson',\n      location: 'Downtown',\n      email: 'david@farmtable.com',\n      phone: '(555) 456-7890'\n    },\n    {\n      id: 'rest-2',\n      name: 'Garden Fresh Cafe',\n      owner: 'Sarah Johnson',\n      location: 'Midtown',\n      email: 'sarah@gardenfresh.com',\n      phone: '(555) 321-0987'\n    }\n  ],\n  orders: [\n    {\n      id: 'order-1',\n      restaurantId: 'rest-1',\n      restaurantName: 'Farm Table Bistro',\n      items: [\n        {\n          productId: 'prod-1',\n          productName: 'Organic Tomatoes',\n          quantity: 10,\n          price: 4.50,\n          farmId: 'farm-1',\n          farmName: 'Green Valley Farm'\n        }\n      ],\n      status: 'confirmed',\n      orderDate: '2024-01-15',\n      deliveryDate: '2024-01-17',\n      total: 45.00,\n      commission: 4.50\n    }\n  ],\n  lastUpdated: new Date().toISOString()\n}\n\nexport function useLocalData() {\n  const [data, setData] = useState<LocalData>(defaultData)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem('farmfresh-data')\n      if (stored) {\n        const parsedData = JSON.parse(stored)\n        setData(parsedData)\n      } else {\n        // Initialize with default data\n        localStorage.setItem('farmfresh-data', JSON.stringify(defaultData))\n      }\n    } catch (err) {\n      console.error('Error loading data from localStorage:', err)\n      setError('Failed to load data')\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  // Save data to localStorage\n  const saveData = useCallback((newData: LocalData) => {\n    try {\n      const dataToSave = {\n        ...newData,\n        lastUpdated: new Date().toISOString()\n      }\n      localStorage.setItem('farmfresh-data', JSON.stringify(dataToSave))\n      setData(dataToSave)\n      setError(null)\n    } catch (err) {\n      console.error('Error saving data to localStorage:', err)\n      setError('Failed to save data')\n    }\n  }, [])\n\n  // Update specific section of data\n  const updateData = useCallback((section: keyof Omit<LocalData, 'lastUpdated'>, newSectionData: any) => {\n    const updatedData = {\n      ...data,\n      [section]: newSectionData\n    }\n    saveData(updatedData)\n  }, [data, saveData])\n\n  // Add new order\n  const addOrder = useCallback((order: Omit<Order, 'id'>) => {\n    const newOrder: Order = {\n      ...order,\n      id: `order-${Date.now()}`\n    }\n    const updatedOrders = [...data.orders, newOrder]\n    updateData('orders', updatedOrders)\n  }, [data.orders, updateData])\n\n  // Update product inventory\n  const updateProductInventory = useCallback((farmId: string, productId: string, newQuantity: number) => {\n    const updatedFarms = data.farms.map(farm => {\n      if (farm.id === farmId) {\n        return {\n          ...farm,\n          products: farm.products.map(product => \n            product.id === productId \n              ? { ...product, quantity: newQuantity }\n              : product\n          )\n        }\n      }\n      return farm\n    })\n    updateData('farms', updatedFarms)\n  }, [data.farms, updateData])\n\n  // Add new product to farm\n  const addProduct = useCallback((farmId: string, product: Omit<Product, 'id' | 'farmId' | 'farmName'>) => {\n    const farm = data.farms.find(f => f.id === farmId)\n    if (!farm) return\n\n    const newProduct: Product = {\n      ...product,\n      id: `prod-${Date.now()}`,\n      farmId,\n      farmName: farm.name\n    }\n\n    const updatedFarms = data.farms.map(f => \n      f.id === farmId \n        ? { ...f, products: [...f.products, newProduct] }\n        : f\n    )\n    updateData('farms', updatedFarms)\n  }, [data.farms, updateData])\n\n  return {\n    data,\n    loading,\n    error,\n    updateData,\n    addOrder,\n    updateProductInventory,\n    addProduct,\n    saveData\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// CSV Export Utility Function\nexport function exportToCSV(data: any[], filename: string) {\n  try {\n    if (!data || data.length === 0) {\n      throw new Error('No data to export')\n    }\n\n    // Get headers from the first object\n    const headers = Object.keys(data[0])\n    \n    // Create CSV content\n    const csvContent = [\n      // Header row\n      headers.join(','),\n      // Data rows\n      ...data.map(row => \n        headers.map(header => {\n          const value = row[header]\n          // Handle values that might contain commas or quotes\n          if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n            return `\"${value.replace(/\"/g, '\"\"')}\"`\n          }\n          return value || ''\n        }).join(',')\n      )\n    ].join('\\n')\n\n    // Create blob and download\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\n    const link = document.createElement('a')\n    \n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob)\n      link.setAttribute('href', url)\n      link.setAttribute('download', `${filename}.csv`)\n      link.style.visibility = 'hidden'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      URL.revokeObjectURL(url)\n    }\n  } catch (error) {\n    console.error('Error exporting CSV:', error)\n    throw new Error('Failed to export CSV file')\n  }\n}\n\n// Format currency\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount)\n}\n\n// Format date\nexport function formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\n// Generate email mailto link\nexport function generateEmailLink(\n  to: string,\n  subject: string,\n  body: string\n): string {\n  const params = new URLSearchParams({\n    subject: subject,\n    body: body\n  })\n  return `mailto:${to}?${params.toString()}`\n}\n\n// Calculate order total\nexport function calculateOrderTotal(items: { quantity: number; price: number }[]): number {\n  return items.reduce((total, item) => total + (item.quantity * item.price), 0)\n}\n\n// Calculate commission (10% default)\nexport function calculateCommission(total: number, rate: number = 0.1): number {\n  return total * rate\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,SAAS,YAAY,IAAW,EAAE,QAAgB;IACvD,IAAI;QACF,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAC9B,MAAM,IAAI,MAAM;QAClB;QAEA,oCAAoC;QACpC,MAAM,UAAU,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;QAEnC,qBAAqB;QACrB,MAAM,aAAa;YACjB,aAAa;YACb,QAAQ,IAAI,CAAC;YACb,YAAY;eACT,KAAK,GAAG,CAAC,CAAA,MACV,QAAQ,GAAG,CAAC,CAAA;oBACV,MAAM,QAAQ,GAAG,CAAC,OAAO;oBACzB,oDAAoD;oBACpD,IAAI,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,CAAC,QAAQ,MAAM,QAAQ,CAAC,IAAI,GAAG;wBAC7E,OAAO,CAAC,CAAC,EAAE,MAAM,OAAO,CAAC,MAAM,MAAM,CAAC,CAAC;oBACzC;oBACA,OAAO,SAAS;gBAClB,GAAG,IAAI,CAAC;SAEX,CAAC,IAAI,CAAC;QAEP,2BAA2B;QAC3B,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAA0B;QACtE,MAAM,OAAO,SAAS,aAAa,CAAC;QAEpC,IAAI,KAAK,QAAQ,KAAK,WAAW;YAC/B,MAAM,MAAM,IAAI,eAAe,CAAC;YAChC,KAAK,YAAY,CAAC,QAAQ;YAC1B,KAAK,YAAY,CAAC,YAAY,GAAG,SAAS,IAAI,CAAC;YAC/C,KAAK,KAAK,CAAC,UAAU,GAAG;YACxB,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,KAAK,KAAK;YACV,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,IAAI,eAAe,CAAC;QACtB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,SAAS,eAAe,MAAc;IAC3C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;IACZ,GAAG,MAAM,CAAC;AACZ;AAGO,SAAS,WAAW,UAAkB;IAC3C,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACtD,MAAM;QACN,OAAO;QACP,KAAK;IACP;AACF;AAGO,SAAS,kBACd,EAAU,EACV,OAAe,EACf,IAAY;IAEZ,MAAM,SAAS,IAAI,gBAAgB;QACjC,SAAS;QACT,MAAM;IACR;IACA,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,OAAO,QAAQ,IAAI;AAC5C;AAGO,SAAS,oBAAoB,KAA4C;IAC9E,OAAO,MAAM,MAAM,CAAC,CAAC,OAAO,OAAS,QAAS,KAAK,QAAQ,GAAG,KAAK,KAAK,EAAG;AAC7E;AAGO,SAAS,oBAAoB,KAAa,EAAE,OAAe,GAAG;IACnE,OAAO,QAAQ;AACjB","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/farm/harvest-calendar/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { DayPicker } from 'react-day-picker'\nimport { useLocalData } from '@/hooks/useLocalData'\nimport { formatDate } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport 'react-day-picker/dist/style.css'\n\nexport default function HarvestCalendar() {\n  const { data, loading, error } = useLocalData()\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date())\n\n  // Mock farm ID - in a real app, this would come from authentication\n  const currentFarmId = 'farm-1'\n  const currentFarm = data.farms.find(farm => farm.id === currentFarmId)\n\n  // Get seasonal products with harvest dates\n  const seasonalProducts = currentFarm?.products.filter(p => p.seasonal && p.harvestDate) || []\n\n  // Create harvest dates map\n  const harvestDates = seasonalProducts.reduce((acc, product) => {\n    if (product.harvestDate) {\n      const date = new Date(product.harvestDate).toDateString()\n      if (!acc[date]) {\n        acc[date] = []\n      }\n      acc[date].push(product)\n    }\n    return acc\n  }, {} as Record<string, typeof seasonalProducts>)\n\n  // Get products for selected date\n  const selectedDateProducts = selectedDate ? harvestDates[selectedDate.toDateString()] || [] : []\n\n  // Create modifiers for calendar\n  const harvestDateObjects = seasonalProducts\n    .map(p => p.harvestDate ? new Date(p.harvestDate) : null)\n    .filter(Boolean) as Date[]\n\n  const modifiers = {\n    harvest: harvestDateObjects\n  }\n\n  const modifiersStyles = {\n    harvest: {\n      backgroundColor: '#10b981',\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  }\n\n  // Upcoming harvests (next 30 days)\n  const today = new Date()\n  const thirtyDaysFromNow = new Date()\n  thirtyDaysFromNow.setDate(today.getDate() + 30)\n\n  const upcomingHarvests = seasonalProducts.filter(product => {\n    if (!product.harvestDate) return false\n    const harvestDate = new Date(product.harvestDate)\n    return harvestDate >= today && harvestDate <= thirtyDaysFromNow\n  }).sort((a, b) => {\n    const dateA = new Date(a.harvestDate!)\n    const dateB = new Date(b.harvestDate!)\n    return dateA.getTime() - dateB.getTime()\n  })\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-lg\">Loading harvest calendar...</div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <div className=\"text-red-800\">Error: {error}</div>\n      </div>\n    )\n  }\n\n  if (!currentFarm) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n        <div className=\"text-yellow-800\">Farm not found</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Harvest Calendar</h1>\n          <p className=\"text-gray-600\">Track seasonal harvest schedules and planning</p>\n        </div>\n        <Link href=\"/farm\">\n          <Button variant=\"outline\">Back to Dashboard</Button>\n        </Link>\n      </div>\n\n      {/* Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Seasonal Products</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-green-600\">\n              {seasonalProducts.length}\n            </div>\n            <p className=\"text-sm text-gray-500\">Products with harvest dates</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Upcoming Harvests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-blue-600\">\n              {upcomingHarvests.length}\n            </div>\n            <p className=\"text-sm text-gray-500\">Next 30 days</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Today's Harvests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-purple-600\">\n              {harvestDates[today.toDateString()]?.length || 0}\n            </div>\n            <p className=\"text-sm text-gray-500\">Products ready today</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Calendar */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Harvest Calendar</CardTitle>\n            <CardDescription>\n              Green dates indicate scheduled harvests. Click a date to see details.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex justify-center\">\n              <DayPicker\n                mode=\"single\"\n                selected={selectedDate}\n                onSelect={setSelectedDate}\n                modifiers={modifiers}\n                modifiersStyles={modifiersStyles}\n                className=\"rdp-custom\"\n                showOutsideDays\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Selected Date Details */}\n        <Card>\n          <CardHeader>\n            <CardTitle>\n              {selectedDate ? formatDate(selectedDate.toISOString()) : 'Select a Date'}\n            </CardTitle>\n            <CardDescription>\n              {selectedDate ? 'Harvest details for selected date' : 'Click on a calendar date to view harvest details'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {selectedDate && selectedDateProducts.length > 0 ? (\n              <div className=\"space-y-4\">\n                {selectedDateProducts.map(product => (\n                  <div key={product.id} className=\"border rounded-lg p-4\">\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <div>\n                        <h4 className=\"font-medium\">{product.name}</h4>\n                        <p className=\"text-sm text-gray-500\">{product.description}</p>\n                      </div>\n                      <Badge variant=\"outline\">{product.category}</Badge>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <span className=\"text-gray-500\">Current Stock:</span>\n                        <span className=\"ml-2 font-medium\">{product.quantity} units</span>\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Price:</span>\n                        <span className=\"ml-2 font-medium\">${product.price}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : selectedDate ? (\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-500\">No harvests scheduled</div>\n                <p className=\"text-sm text-gray-400 mt-2\">\n                  No products are scheduled for harvest on this date\n                </p>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-500\">Select a date</div>\n                <p className=\"text-sm text-gray-400 mt-2\">\n                  Click on a calendar date to view harvest details\n                </p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Upcoming Harvests */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Upcoming Harvests</CardTitle>\n          <CardDescription>\n            Products scheduled for harvest in the next 30 days\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {upcomingHarvests.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-500\">No upcoming harvests</div>\n              <p className=\"text-sm text-gray-400 mt-2\">\n                No seasonal products are scheduled for harvest in the next 30 days\n              </p>\n              <Link href=\"/farm/inventory\">\n                <Button className=\"mt-4\">Add Seasonal Products</Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {upcomingHarvests.map(product => {\n                const harvestDate = new Date(product.harvestDate!)\n                const daysUntilHarvest = Math.ceil((harvestDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))\n                \n                return (\n                  <div key={product.id} className=\"border rounded-lg p-4\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <h4 className=\"font-medium\">{product.name}</h4>\n                          <Badge variant=\"outline\">{product.category}</Badge>\n                          <Badge \n                            variant={daysUntilHarvest <= 7 ? \"destructive\" : \"default\"}\n                          >\n                            {daysUntilHarvest === 0 ? 'Today' : \n                             daysUntilHarvest === 1 ? 'Tomorrow' : \n                             `${daysUntilHarvest} days`}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-gray-500 mb-2\">{product.description}</p>\n                        <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                          <div>\n                            <span className=\"text-gray-500\">Harvest Date:</span>\n                            <div className=\"font-medium\">{formatDate(product.harvestDate!)}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-500\">Current Stock:</span>\n                            <div className=\"font-medium\">{product.quantity} units</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-500\">Price:</span>\n                            <div className=\"font-medium\">${product.price}</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* All Seasonal Products */}\n      <Card>\n        <CardHeader>\n          <CardTitle>All Seasonal Products</CardTitle>\n          <CardDescription>\n            Complete list of your seasonal products and their harvest schedules\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {seasonalProducts.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-500\">No seasonal products</div>\n              <p className=\"text-sm text-gray-400 mt-2\">\n                Add seasonal products with harvest dates to use the calendar feature\n              </p>\n              <Link href=\"/farm/inventory\">\n                <Button className=\"mt-4\">Add Seasonal Products</Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {seasonalProducts.map(product => (\n                <div key={product.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <h4 className=\"font-medium\">{product.name}</h4>\n                    <Badge variant=\"outline\">{product.category}</Badge>\n                  </div>\n                  <p className=\"text-sm text-gray-500 mb-3\">{product.description}</p>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500\">Harvest Date:</span>\n                      <span className=\"font-medium\">\n                        {product.harvestDate ? formatDate(product.harvestDate) : 'Not set'}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500\">Stock:</span>\n                      <span className=\"font-medium\">{product.quantity} units</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500\">Price:</span>\n                      <span className=\"font-medium\">${product.price}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Custom CSS for calendar */}\n      <style jsx global>{`\n        .rdp-custom {\n          --rdp-cell-size: 40px;\n          --rdp-accent-color: #10b981;\n          --rdp-background-color: #10b981;\n          margin: 0;\n        }\n        \n        .rdp-custom .rdp-day_selected {\n          background-color: var(--rdp-accent-color);\n          color: white;\n        }\n        \n        .rdp-custom .rdp-day_today {\n          font-weight: bold;\n          border: 2px solid var(--rdp-accent-color);\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}